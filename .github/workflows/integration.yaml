name: 🔄 Integration

on:
  pull_request:

jobs:
  line-ending-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get list of changed files
        id: changed-files
        run: |
          changed_files=$(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.sha }})
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$changed_files" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Check for missing newlines
        id: newline-check
        run: |
          readarray -t changed_files <<< "${{ steps.changed-files.outputs.files }}"
          files_without_newline=""
          for file in "${changed_files[@]}"; do
            if [ -f "$file" ] && [ "$(tail -c 1 "$file" | wc -l)" -eq 0 ]; then
              files_without_newline+=("$file")
            fi
          done
          
          if [ ${#files_without_newline[@]} -gt 0 ]; then
            json_files=$(printf '%s\n' "${files_without_newline[@]}" | jq -R -s -c 'split("\n")[:-1]')
            echo "files_without_newline: $json_files"
            echo "files=$json_files" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Set Job Summary
        if: failure()
        run: |
          if [ -n '${{ steps.newline-check.outputs.files }}' ]; then
          echo "🛠️ 아래 파일들에 공백 줄을 추가해주세요:" >> $GITHUB_STEP_SUMMARY
          echo '${{ steps.newline-check.outputs.files }}' |
            jq -r '.[]' |
            sed 's/^/- /' >> $GITHUB_STEP_SUMMARY
          fi
